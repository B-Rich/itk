# Visual C++ 4.0 makefile
#
# Copyright (c) 1993-1996 Lucent Technologies
# based on original from
# Copyright (c) 1995-1996 by Sun Microsystems, Inc.	
#
# See the file "license.terms" for information on usage and redistribution
# of this file, and for a DISCLAIMER OF ALL WARRANTIES.

!include "..\..\Makefile.vc"


# Project directories
#
# ROOT = top of source tree
# TMPDIR = location where .obj files should be stored during build

ROOT		= ..
TMPDIR		= .
TARGET_LIB_ITK	= $(TARGET_LIB)\Itk2.2
TARGET_DOC_ITK 	= $(TARGET_DOC)\Itk

# Comment the following line to compile with symbols
NODEBUG=1

# uncomment the following two lines to compile with TCL_MEM_DEBUG
#DEBUGDEFINES	=-DTCL_MEM_DEBUG

# Make sure the VC++ tools are at the head of the path
PATH=$(TOOLS32)\bin;$(PATH)

WINDIR          = $(ROOT)\win
GENERICDIR		 = $(ROOT)\generic
XLIBDIR		    = $(ROOT)\xlib

TK_INCLUDES = \
        -I$(TOOLS32)\include -I$(ROOT)\win -I$(ROOT)\generic \
	-I$(TKDIR)\bitmaps -I$(TKDIR)\xlib -I$(TKDIR)\generic -I$(ROOT) \
   -I$(ITCLDIR)\generic -I$(TCLDIR)\generic 

TK_DEFINES = \
        -nologo $(DEBUGDEFINES) -DUSE_TCLALLOC=0

ITKWISHOBJS = \
	$(TKLIBDIR)\tkConsole.obj \
	$(TMPDIR)\winMain.obj

TKTESTOBJS = \
	$(TMPDIR)\tkConsole.obj \
	$(TMPDIR)\tkTest.obj \
	$(TMPDIR)\tkSquare.obj \
	$(TMPDIR)\testMain.obj

ITKOBJS = \
	$(TMPDIR)\itk_archetype.obj \
	$(TMPDIR)\itk_cmds.obj \
	$(TMPDIR)\itk_option.obj \
	$(TMPDIR)\itk_util.obj \
	$(TMPDIR)\dllEntryPoint.obj

ITKWISH = itkwish.exe
ITKTEST = tktest.exe

CPU		   = i386
INCLUDE		   = $(TOOLS32)\include
!include <ntwin32.mak>

#
# Targets
#

all:    $(ITKDLL) $(ITKWISH)
test:	$(ITKDLL) $(ITKTEST)

install: all
	$(MKDIR) "$(TARGET_ROOT)"
	$(MKDIR) "$(TARGET_BIN)"
	$(MKDIR) "$(TARGET_LIB_ROOT)"
	$(MKDIR) "$(TARGET_LIB)"
	$(MKDIR) "$(TARGET_LIB_ITK)"
	$(MKDIR) "$(TARGET_INCLUDE_ROOT)"
	$(MKDIR) "$(TARGET_INCLUDE)"
	$(MKDIR) "$(TARGET_DOC)"
	$(MKDIR) "$(TARGET_DOC_ITK)"
	$(CP) $(TMPDIR)\$(ITKWISH) "$(TARGET_BIN)"
	$(CP) $(TMPDIR)\$(ITKDLL) "$(TARGET_BIN)"
	$(CP) $(ROOT)\generic\itk.h "$(TARGET_INCLUDE)"
	$(CP) $(ROOT)\library\*.* "$(TARGET_LIB_ITK)"
	$(CP) $(ROOT)\win\*.tcl "$(TARGET_LIB_ITK)"
	$(CP) $(ROOT)\..\html\Itk\*.* "$(TARGET_DOC_ITK)"


itkvc.def: $(ITKOBJS)
	$(TCLLIBDIR)\dumpexts.exe -o $@ $(ITKDLL) @<<
		$(ITKOBJS)
<<

$(ITKDLL): $(ITKOBJS) $(TMPDIR)\itk.res itkvc.def
	set LIB=$(TOOLS32)\lib
        $(link32) $(linkdebug) $(dlllflags) -def:itkvc.def \
 		$(TMPDIR)\itk.res $(TKLIBDIR)\$(TKLIB) $(ITCLLIBDIR)\$(ITCLLIB) \
      $(TCLLIBDIR)\$(TCLLIB) $(guilibsdll) \
		-out:$(ITKDLL) @<<
		$(ITKOBJS)
<<


$(ITKWISH): $(ITKWISHOBJS) $(ITKLIB) $(TMPDIR)\itkwish.res
	set LIB=$(TOOLS32)\lib
	$(link32) $(linkdebug) $(guilflags) \
		$(ITKWISHOBJS) $(TMPDIR)\itkwish.res $(ITKLIB) \
      $(TKLIBDIR)\$(TKLIB) $(ITCLLIBDIR)\$(ITCLLIB) \
		$(TCLLIBDIR)\$(TCLLIB) $(guilibsdll) \
		-out:$(ITKWISH) 

$(ITKTEST): $(ITKTESTOBJS) $(ITKLIB) $(TMPDIR)\itkwish.res
	set LIB=$(TOOLS32)\lib
	$(link32) $(linkdebug) $(guilflags) \
		$(TKTESTOBJS) $(TMPDIR)\itkwish.res $(ITKLIB) \
      $(TKLIBDIR)\$(TKLIB) $(ITCLLIBDIR)\$(ITCLLIB) \
		$(TCLLIBDIR)\$(TCLLIB) $(guilibsdll) \
		-out:$(ITKTKTEST) 

#
# Special case object file targets
#

$(TMPDIR)\testMain.obj: $(ROOT)\win\winMain.c
	$(cc32) $(cdebug) $(cflags) $(cvarsdll) $(TK_INCLUDES) \
        	$(TK_DEFINES) -DTK_TEST -Fo$@ $?

#
# Implicit rules
#

{$(ROOT)\generic}.c{$(TMPDIR)}.obj:
	$(cc32) $(cdebug) $(cflags) $(cvarsdll) $(TK_INCLUDES) \
		$(TK_DEFINES) -Fo$(TMPDIR)\ $<

{$(ROOT)\win}.c{$(TMPDIR)}.obj:
	$(cc32) $(cdebug) $(cflags) $(cvarsdll) $(TK_INCLUDES) \
		$(TK_DEFINES) -Fo$(TMPDIR)\ $<

{$(ROOT)\win\rc}.rc{$(TMPDIR)}.res:
	$(rc32) -fo $@ -r -i $(ROOT)\generic -i $(ITCLDIR)\generic \
   	-i $(TKDIR)\generic -i $(TCLDIR)\generic $<

clean:
	-@$(RM) $(ITKWISH)
	-@$(RM) $(ITKLIB)
	-@$(RM) $(ITKDLL)
	-@$(RM) itkvc.def
	-@$(RM) $(TMPDIR)\Rc\*.res
	-@$(RM) $(TMPDIR)\*.obj
	-@$(RM) *.exp

